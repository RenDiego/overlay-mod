plugins {
    id "java"
    id "idea"
    id "org.jetbrains.kotlin.jvm" version '2.0.0'
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id "net.minecraftforge.gradle.forge"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = "https://jitpack.io/"
    }

}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

sourceCompatibility = targetCompatibility = 1.8
compileJava.options.encoding = "UTF-8"

configurations.runtimeOnly.canBeResolved = true

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = false
}

configurations {
    include
    implementation.extendsFrom(include)
}

dependencies {

    include  "org.jetbrains.kotlin:kotlin-stdlib:2.0.0"

    runtimeOnly "org.jetbrains.kotlin:kotlin-stdlib:2.0.0"

    include 'org.json:json:20231013'

    runtimeOnly 'org.json:json:20231013'

    include fileTree(include: ["*.jar"], dir: "libs")
}

shadowJar {
    archiveClassifier.set("")
    configurations = [project.configurations.include]
    duplicatesStrategy DuplicatesStrategy.EXCLUDE

    exclude "LICENSE.txt"

    exclude "META-INF/maven/**"
    exclude "META-INF/versions/**"

    exclude "org/apache/log4j/**"
    exclude "org/apache/commons/**"
    exclude "org/junit/**"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    filesMatching("mcmod.info") {
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    rename "(.+_at.cfg)", "META-INF/\$1"
}

reobf {
    shadowJar {
        mappingType = "SEARGE"
    }
}

tasks.reobfJar.dependsOn(shadowJar)